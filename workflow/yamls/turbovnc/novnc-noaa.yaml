jobs:
  main:
    steps:
      - name: Preprocessing
        run: ./utils/steps/preprocessing.sh 
      - name: Run Input Form Resource Wrapper
        run: ./utils/steps/input_form_resource_wrapper.sh
      - name: Process Inputs
        run: ./utils/steps/process_inputs_sh.sh 
      - name: Controller Preprocessing
        run: ./utils/steps/controller_preprocessing.sh
      - name: Prepare Service JSON
        run: ./utils/steps/prepare_service_json.sh 
      - name: Initialize Cancel Script
        run: ./utils/steps/initialize_cancel_script.sh
      - name: Create Session Script
        run: ./utils/steps/create_session_script.sh
      - name: Launch Job and Wait
        run: ./utils/steps/launch_job_and_wait.sh
        cleanup: ./kill.sh
      - name: Clean and Exit
        run: ./utils/steps/clean_and_exit.sh

'on':
  execute:
    inputs:
      pwrl_host:
        type: group
        label: Service Host
        items:
          resource:
            type: compute-clusters
            label: Service host
            include-workspace: false
            tooltip: Resource to host the service
          nports:
            type: string
            label: Number of Ports to Reserve
            hidden: true
            default: '1'
            optional: true
          jobschedulertype:
            type: dropdown
            label: Select Controller or SLURM Partition
            default: CONTROLLER
            options:
              - value: CONTROLLER
                label: Controller
              - value: SLURM
                label: SLURM Partition
            tooltip: Job will submitted using SSH or sbatch, respectively
          _sch__dd_account_e__tag_existing:
            label: SLURM account 
            type:  slurm-accounts
            resource: ${{ inputs.pwrl_host.resource }}
            tooltip: Account to submit the interactive job
            ignore: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            hidden: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            optional: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  && 'existing' !== inputs.pwrl_host.resource.provider }}"
          _sch__dd_partition_e__tag_existing:
            label: SLURM partition
            type:  slurm-partitions
            resource: ${{ inputs.pwrl_host.resource }}
            tooltip: SLURM partition to submit the interactive job
            ignore: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            hidden: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            optional: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
          qos_tag_existing:
            label: Quality of Service [QoS]
            type: slurm-qos
            resource: ${{ inputs.pwrl_host.resource }}
            tooltip: Select a QOS from the drop down menu
            ignore: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype || 'existing' !== inputs.pwrl_host.resource.provider }}"
            hidden: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            optional: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
          _sch__dd_ntasks_e__tag_existing:
            label: Number of tasks
            type:  number
            min: 1
            max: 100
            ignore: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype || 'existing' !== inputs.pwrl_host.resource.provider }}"
            hidden: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            optional: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
          _sch__dd_partition_e__tag_cloud:
            type: slurm-partitions
            label: SLURM partition
            hidden: ${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' === inputs.pwrl_host.resource.provider }}
            ignore: ${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' === inputs.pwrl_host.resource.provider }}
            optional: true
            tooltip: >-
              Partition to submit the interactive job. Leave empty to let SLURM
              pick the optimal option.
            resource: ${{ inputs.pwrl_host.resource }}
          _sch__dd_time_e_:
            label: Walltime
            type: string
            default: 01:00:00
            hidden: ${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  }}
            tooltip: e.g. 01:00:00 - Amount of time slurm will honor the interactive session.
          _sch__dd_nodes_e__tag_existing:
            label: Number of nodes
            type:  number
            hidden: true
            default: 1
            ignore: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
            optional: "${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype  || 'existing' !== inputs.pwrl_host.resource.provider }}"
          scheduler_directives_slurm:
            type: string
            label: Scheduler directives
            hidden: ${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype }}
            ignore: ${{ 'SLURM' !== inputs.pwrl_host.jobschedulertype }}
            optional: true
            tooltip: >-
              e.g. --mem=1000;--gpus-per-node=1 - Use the semicolon character ;
              to separate parameters. Do not include the SBATCH keyword.
        collapsed: false
      service:
        type: group
        label: Service
        hidden: "${{ 'existing' === inputs.pwrl_host.resource.provider }}"
        items:
          novnc_parent_install_dir:
            label: noVNC installation directory
            type: string
            hidden: true
            default: __WORKDIR__/pw/software
          novnc_tgz_basename:
            label: Basename of the novnc tgz file
            type: string
            hidden: true
            default: noVNC-1.5.0.tgz
          name:
            type: dropdown
            label: Select remote display protocol
            options:
              - label: VNC Server
                value: turbovnc
              - label: Nice DCV
                value: nicedcv
              - label: Scyld Cloud Workstation
                value: scw
            tooltip: Make sure the display protocol is installed in the host!
            default: turbovnc
            ignore: "${{ 'existing' === inputs.pwrl_host.resource.provider }}"
